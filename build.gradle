plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + project.minecraft_version + "-fabric"
group = project.maven_group

repositories {
	maven { url "https://maven.pinkgoosik.ru" } //cosmetica, goosik-config
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "ru.pinkgoosik:cosmetica:0.3.2-1.17.1-fabric"
	include "ru.pinkgoosik:cosmetica:0.3.2-1.17.1-fabric"

	modImplementation "ru.pinkgoosik:goosik-config:0.2.0-1.17.1-fabric"
	include "ru.pinkgoosik:goosik-config:0.2.0-1.17.1-fabric"
}

processResources {
	inputs.property "version", project.mod_version
	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		maven {
			url "https://maven.pinkgoosik.ru/"
			credentials {
				username System.getenv("MAVEN_REPO_USER")
				password System.getenv("MAVEN_REPO_PASS")
			}
		}
	}
}
