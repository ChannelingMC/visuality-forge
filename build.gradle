plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = "mc" + project.minecraft_version + "-" + project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.gegy.dev" } //databreaker
	maven { url "https://maven.terraformersmc.com" } //modmenu
	maven { url "https://jitpack.io" } //cosmetica
	maven { url "https://maven.parchmentmc.org" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
//	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.17.1:2021.10.31@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.github.PinkGoosik:cosmetica:0.2.1"
	include "com.github.PinkGoosik:cosmetica:0.2.1"

	modImplementation "com.github.PinkGoosik:goosik-config:0.1.1"
	include "com.github.PinkGoosik:goosik-config:0.1.1"

	modRuntime "com.terraformersmc:modmenu:2.0.3"
	modRuntime "supercoder79:databreaker:0.2.7"
	modRuntime "com.ptsmods:devlogin:1.2"
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
